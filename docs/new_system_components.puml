@startuml
!include <C4/C4_Component>

Person_Ext(user, "Пользователь")
System_Ext(device, "Девайс")

System_Boundary(smart_home_system, "SaaS: Умный дом") {
  Container(api_gateway, "API GateWay")

  Container(device_management_service, "DeviceManagementService")
  ContainerQueue(kafka, "Kafka")

  ContainerDb(automation_db, "AutomationServiceDB")
  Container_Boundary(automation_container, "AutomationService"){
    Component(automation_api, "Api", "", "Api управления сценариями")
    Component(event_listener, "Device Events Listener", "", "Слушает события с устройств и сопоставляет их со сценариями")
    Component(action_executor, "Device Action Executor", "", "Слушает события с устройств и сопоставляет их со сценариями")

    Rel(automation_api, automation_db, "Сохраняет информацию о сценарии", "")
    Rel(event_listener, kafka, "Слушает события от устройств", "")
    Rel(event_listener, automation_db, "Сопоставляет событие со сценарием", "")
    Rel(event_listener, action_executor, "При совпадении всех условий запускает действие", "")
    Rel(action_executor, kafka, "Отправляет команду на устройство чекрез кафку", "")
  }

}

Rel(user, api_gateway, "Управляет сценариями", "https")
Rel(device_management_service, device, "Отправляет команду на устройство", "https")
Rel(api_gateway, automation_api, "", "https")

Rel(device_management_service, kafka, "Слушает новые команды на устройства, отправляет успех или не успех в ответ", "")


SHOW_LEGEND()
@enduml